{
	"definitions": {
		"ITableData": {
			"description": "",
			"properties": {},
			"type": "object",
			"additionalProperties": {}
		},
		"IStockData": {
			"description": "",
			"properties": {
				"LongName": {
					"type": "string",
					"description": ""
				},
				"Ticker": {
					"type": "string",
					"description": ""
				},
				"Industry": {
					"type": "string",
					"description": ""
				},
				"Exchange": {
					"type": "string",
					"description": ""
				},
				"Price": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"W52H": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"W52L": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"VolAvg": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"Outstanding": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"Float": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"VolDOI": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"VolPreM": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"PC": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"PremHigh": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"Open": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"HOD": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"HODTime": {
					"type": "string",
					"description": ""
				},
				"LOD": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"LODTime": {
					"type": "string",
					"description": ""
				},
				"Close": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"AH": {
					"type": "number",
					"format": "double",
					"description": ""
				}
			},
			"type": "object"
		},
		"BadRequestError": {
			"description": "Represents a BAD REQUEST error. The request could not be understood by the\nserver due to malformed syntax. The client SHOULD NOT repeat the request\nwithout modifications.",
			"properties": {
				"message": {
					"type": "string",
					"description": ""
				},
				"statusCode": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"name": {
					"type": "string",
					"description": ""
				},
				"stack": {
					"type": "string",
					"description": ""
				}
			},
			"type": "object",
			"required": [
				"message",
				"statusCode",
				"name"
			]
		}
	},
	"info": {
		"license": {
			"name": "ISC"
		},
		"title": "backend",
		"version": "1.0.0"
	},
	"paths": {
		"/parseCSV": {
			"post": {
				"operationId": "ServiceParseCSV",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ITableData"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"consumes": [
					"multipart/form-data"
				],
				"parameters": [
					{
						"description": "",
						"in": "formData",
						"name": "sourceName",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "formData",
						"name": "file",
						"required": true,
						"type": "file"
					}
				]
			}
		},
		"/stockapi/{ID}": {
			"get": {
				"operationId": "ServiceGetStockNow",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "path",
						"name": "ID",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/stockapi/{ID}/{date}": {
			"get": {
				"operationId": "ServiceGetStockThen",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/IStockData"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "path",
						"name": "ID",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "path",
						"name": "date",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/loginKeyPOST": {
			"post": {
				"operationId": "ServiceLoginKeyPOST",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object"
						}
					}
				]
			}
		},
		"/usernameFromKeyGET": {
			"get": {
				"operationId": "ServiceUsernameFromKeyGET",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "Get a username from a key in browser local storage\r\n   If the key does not match with a user, nothing is returned\r\n   else the user's username is returned",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/createAccountPost": {
			"post": {
				"operationId": "ServiceCreateAccountPost",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "boolean"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "Method creates Account",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object"
						}
					}
				]
			}
		},
		"/accountData": {
			"get": {
				"operationId": "ServiceAccountData",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/sameAccountGet": {
			"get": {
				"operationId": "ServiceSameAccountGet",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "boolean"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "For Account Settings. Sees if @param account is the same name as uname associated with @param key *",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "account",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/accountExists": {
			"get": {
				"operationId": "ServiceAccountExists",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "boolean"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "newAccountName",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/changeTheAccountName": {
			"get": {
				"operationId": "ServiceChangeTheAccountName",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "newAccountName",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/changePassword": {
			"get": {
				"operationId": "ServiceChangePassword",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "boolean"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "oldP",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "newP",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/changeExtraAccountData": {
			"get": {
				"operationId": "ServiceChangeExtraAccountData",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "boolean"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "firstName",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "lastName",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "email",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "phone",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "bdate",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/removeTheItemGet": {
			"post": {
				"operationId": "ServiceRemoveTheItemGet",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "Remove data item based on id *",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object"
						}
					}
				]
			}
		},
		"/postTableDB": {
			"post": {
				"operationId": "ServicePostTableDB",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"type": "object"
						}
					}
				]
			}
		},
		"/stockdataGet": {
			"get": {
				"operationId": "ServiceStockdataGet",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"type": "object"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "Get data from default stock table *",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "coll",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/userSessionsGet": {
			"get": {
				"operationId": "ServiceUserSessionsGet",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "Get all user Sessions *",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/createNewSessionForUser": {
			"get": {
				"operationId": "ServiceCreateNewSessionForUser",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "Create a new session for a user. This adds a session for a user *",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "collectionName",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/removeSessionForUser": {
			"get": {
				"operationId": "ServiceRemoveSessionForUser",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "Remove Session  *",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "session",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/changeSessionName": {
			"get": {
				"operationId": "ServiceChangeSessionName",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "boolean"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "sid",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "newSid",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/getTradesByYear": {
			"get": {
				"operationId": "ServiceGetTradesByYear",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/BadRequestError"
						}
					}
				},
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "query",
						"name": "key",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "coll",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "query",
						"name": "year",
						"required": true,
						"type": "string"
					}
				]
			}
		}
	},
	"swagger": "2.0",
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "access_token",
			"in": "query"
		}
	},
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	]
}